//import java.util.ArrayList;
//import java.util.List;
//import java.util.Scanner;
//
//public class GPACalculator {
//
//    public static void main(String[] args) {
//        Scanner scanner = new Scanner(System.in);
//        List<Course> courses = new ArrayList<>();
//
//        System.out.println("Welcome to the GPA Calculator!");
//
//        while (true) {
//            Course course = new Course();
//
//            // Get user input for course details
//            System.out.print("Enter course name: ");
//            course.setName(scanner.nextLine());
//
//            System.out.print("Enter course code: ");
//            course.setCode(scanner.nextLine());
//
//            System.out.print("Enter course units: ");
//            course.setUnits(scanner.nextInt());
//
//            System.out.print("Enter course score: ");
//            double courseScore = scanner.nextDouble();
//            course.setGrade(determineGrade(courseScore));
//            scanner.nextLine(); // Consume the newline character
//
//            // Add the course to the list
//            courses.add(course);
//
//            // Ask if the user wants to input more courses
//            System.out.print("Do you want to enter another course? (yes/no): ");
//            String continueInput = scanner.nextLine().toLowerCase();
//
//            if (!continueInput.equals("yes")) {
//                break; // Exit the loop if the user does not want to enter more courses
//            }
//        }
//
//        // Display recorded course information
//        System.out.println("\nRecorded Courses:");
//        for (Course course : courses) {
//            System.out.println(course.toSummaryString());
//        }
//
//        // Calculate GPA and display the result
//        double gpa = calculateGPA(courses);
////        System.out.printf("\nTotal Units: %d\n", calculateTotalUnits(courses));
//        System.out.printf("GPA: %.2f\n", gpa);
//
//        // Close the scanner
//        scanner.close();
//    }
//
//    // Function to calculate GPA based on the list of courses
//    private static double calculateGPA(List<Course> courses) {
//        int totalUnits = calculateTotalUnits(courses);
//        double totalWeightedScore = 0.0;
//
//        for (Course course : courses) {
//            totalWeightedScore += (course.getScore() * course.getUnits());
//        }
//
//        if (totalUnits == 0) {
//            return 0.0; // Avoid division by zero
//        }
//        return totalWeightedScore / totalUnits;
//    }
//
//    // Function to calculate total units based on the list of courses
//    private static int calculateTotalUnits(List<Course> courses) {
//        int totalUnits = 0;
//        for (Course course : courses) {
//            totalUnits += course.getUnits();
//        }
//        return totalUnits;
//    }
//
//    // Function to determine grade based on score
//    private static String determineGrade(double score) {
//        if (score >= 70 && score <= 100) {
//            return "A";
//        } else if (score >= 60 && score < 70) {
//            return "B";
//        } else if (score >= 50 && score < 60) {
//            return "C";
//        } else if (score >= 45 && score < 50) {
//            return "D";
//        } else if (score >= 40 && score < 45) {
//            return "E";
//        } else if (score >= 0 && score < 40) {
//            return "Fail";
//        } else {
//            return "Invalid Score";
//        }
//    }
//
//    // Course class to store course details
//    static class Course {
//        private String name;
//        private String code;
//        private int units;
//        private String grade;
//
//        public void setName(String name) {
//            this.name = name;
//        }
//
//        public void setCode(String code) {
//            this.code = code;
//        }
//
//        public void setUnits(int units) {
//            this.units = units;
//        }
//
//        public void setGrade(String grade) {
//            this.grade = grade;
//        }
//
//        public String toSummaryString() {
//            System.out.println("|-------------|--------------|---------|------------|");
//            System.out.println("| COURSE&CODE | COURSE UNIT  |  GRADE  | GRADE UNIT |");
//            System.out.println("|-------------|--------------|---------|------------|");
//            return name + " ("   + code +   ")            "      +  units +
//                    "            " + grade + "        " + calculateGradeUnits(grade);
//        }
//
//
//        private double calculateGradeUnits(String grade) {
//            // You can define the mapping of grade to grade units here
//            // For example, you might assign grade units based on the grade (A=5, B=4, C=3, etc.)
//            // For simplicity, I'm using a basic mapping for demonstration
//            switch (grade) {
//                case "A":
//                    return 5;
//                case "B":
//                    return 4;
//                case "C":
//                    return 3;
//                case "D":
//                    return 2;
//                case "E":
//                    return 1;
//                case "Fail":
//                    return 0;
//                default:
//                    return -1; // Indicate an invalid grade
//            }
//        }
//
//        public double getScore() {
//            // This method is added to make it accessible for GPA calculation
//            // In a real scenario, you might want to store the actual score as a separate field
//            return calculateWeightedScore(grade);
//        }
//
//        public int getUnits() {
//            return units;
//        }
//
//        private double calculateWeightedScore(String grade) {
//            switch (grade) {
//                case "A":
//                    return 5.0;
//                case "B":
//                    return 4.0;
//                case "C":
//                    return 3.0;
//                case "D":
//                    return 2.0;
//                case "E":
//                    return 1.0;
//                case "Fail":
//                    return 0.0;
//                default:
//                    return -1.0; // Indicate an invalid grade
//            }
//        }
//    }
//}
//
//
//
//
//

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class GPACalculator {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Course> courses = new ArrayList<>();

        System.out.println("Welcome to the GPA Calculator!");

        while (true) {
            Course course = new Course();

            // Get user input for course details
            System.out.print("Enter course name: ");
            course.setName(scanner.nextLine());

            System.out.print("Enter course code: ");
            course.setCode(scanner.nextLine());

            System.out.print("Enter course units: ");
            course.setUnits(scanner.nextInt());

            System.out.print("Enter course score: ");
            double courseScore = scanner.nextDouble();
            course.setGrade(determineGrade(courseScore));
            scanner.nextLine(); // Consume the newline character

            // Add the course to the list
            courses.add(course);

            // Ask if the user wants to input more courses
            System.out.print("Do you want to enter another course? (yes/no): ");
            String continueInput = scanner.nextLine().toLowerCase();

            if (!continueInput.equals("yes")) {
                break; // Exit the loop if the user does not want to enter more courses
            }
        }

        // Display recorded course information in tabular form
        System.out.println("\nRecorded Courses:");
        System.out.printf("%-20s%-15s%-10s%-15s\n", "COURSE & CODE", "COURSE UNIT", "GRADE", "GRADE UNIT");

        for (Course course : courses) {
            System.out.printf("%-20s%-15d%-10s%-15d\n",
                    course.getName() + " (" + course.getCode() + ")",
                    course.getUnits(),
                    course.getGrade(),
                    course.calculateGradeUnits());
        }

        // Calculate GPA and display the result
        double gpa = calculateGPA(courses);
        System.out.printf("\nTotal Units: %d\n", calculateTotalUnits(courses));
        System.out.printf("GPA: %.2f\n", gpa);

        // Close the scanner
        scanner.close();
    }

    // Function to calculate GPA based on the list of courses
    private static double calculateGPA(List<Course> courses) {
        int totalUnits = calculateTotalUnits(courses);
        double totalWeightedScore = 0.0;

        for (Course course : courses) {
            totalWeightedScore += (course.getScore() * course.getUnits());
        }

        if (totalUnits == 0) {
            return 0.0; // Avoid division by zero
        }
        return totalWeightedScore / totalUnits;
    }

    // Function to calculate total units based on the list of courses
    private static int calculateTotalUnits(List<Course> courses) {
        int totalUnits = 0;
        for (Course course : courses) {
            totalUnits += course.getUnits();
        }
        return totalUnits;
    }

    // Function to determine grade based on score
    private static String determineGrade(double score) {
        if (score >= 70 && score <= 100) {
            return "A";
        } else if (score >= 60 && score < 70) {
            return "B";
        } else if (score >= 50 && score < 60) {
            return "C";
        } else if (score >= 45 && score < 50) {
            return "D";
        } else if (score >= 40 && score < 45) {
            return "E";
        } else if (score >= 0 && score < 40) {
            return "Fail";
        } else {
            return "Invalid Score";
        }
    }

    // Course class to store course details
    static class Course {
        private String name;
        private String code;
        private int units;
        private String grade;

        public void setName(String name) {
            this.name = name;
        }

        public void setCode(String code) {
            this.code = code;
        }

        public void setUnits(int units) {
            this.units = units;
        }

        public void setGrade(String grade) {
            this.grade = grade;
        }

        public String getName() {
            return name;
        }

        public String getCode() {
            return code;
        }

        public int getUnits() {
            return units;
        }

        public String getGrade() {
            return grade;
        }

        public String toSummaryString() {
            return name + " (" + code + ") - Units: " + units +
                    ", Grade: " + grade + ", Grade Units: " + calculateGradeUnits();
        }

        public double getScore() {
            return calculateWeightedScore(grade);
        }

        public int calculateGradeUnits() {
            switch (grade) {
                case "A":
                    return 5;
                case "B":
                    return 4;
                case "C":
                    return 3;
                case "D":
                    return 2;
                case "E":
                    return 1;
                case "Fail":
                    return 0;
                default:
                    return -1; // Indicate an invalid grade
            }
        }

        private double calculateWeightedScore(String grade) {
            switch (grade) {
                case "A":
                    return 5.0;
                case "B":
                    return 4.0;
                case "C":
                    return 3.0;
                case "D":
                    return 2.0;
                case "E":
                    return 1.0;
                case "Fail":
                    return 0.0;
                default:
                    return -1.0; // Indicate an invalid grade
            }
        }
    }
}
